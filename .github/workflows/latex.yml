name: Build and Send LaTeX Document

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Construccion
    runs-on: ubuntu-latest
    container:
      image: adnrv/texlive:tools
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Change to docs directory
      run: cd docs
    - name: Remove Old PDF
      run: rm -rf *.pdf
      working-directory: ./docs
    - name: Clear LaTeX Files
      run: latexmk -c -C
      working-directory: ./docs
    - name: Compile LaTeX Document
      run: |
        ls 
        latexmk -e '$max_repeat=10' -synctex=1 -interaction=nonstopmode -file-line-error -pdf -f main.tex
      working-directory: ./docs
    - name: Upload PDF
      uses: actions/upload-artifact@v2
      with:
        name: main.pdf
        path: docs/main.pdf
        
  release:
    name: Despliegue
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Descargar artefactos
      uses: actions/download-artifact@v3
      with:
        name: main.pdf

  notification:
    name: Notificacion
    runs-on: ubuntu-latest
    needs: release
    steps:
    ## Checkout might necesary?
    - name: Checkout
      uses: actions/checkout@v2
    - name: Change to docs directory
      run: cd docs

    - name: Install Python Dependencies
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    
    - name: Install python packages
      run: |
        python -m pip install --upgrade pip
        pip install requests
        pip list
    - name: Get Artifact URL
      id: get-artifact-url
      run: |
        echo ${{ secrets.API_GITHUB_TOKEN }}
        echo ${{ github.repository }}
        echo curl \
        -H "Authorization: token ${{ secrets.API_GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/actions/artifacts

        # ARTIFACT_DOWNLOAD_URL=$(curl \
        #   -H "Authorization: token ${{ secrets.API_GITHUB_TOKEN }}" \
        #   -H "Accept: application/vnd.github.v3+json" \
        #   https://api.github.com/repos/${{ github.repository }}/actions/artifacts | jq -r '.artifacts[] | select(.name=="main.pdf").archive_download_url')
        # echo "::set-output name=artifact_url::$ARTIFACT_DOWNLOAD_URL"
    - name: ls :v
      run: ls -R
    - name: Execute Python Script
      run: python send_document.py ${{ steps.get-artifact-url.outputs.artifact_url }}
